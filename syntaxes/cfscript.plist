<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>CFML Script</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>anonymous-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(\s*\bfunction\b|\s*\([^\(]*?\)\s*=&gt;\s*\{))</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.function.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.function.anonymous.cfml meta.function.declaration.cfml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(function)\b\s*</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.function.anonymous.cfml meta.function.declaration.cfml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.arrow.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*(=&gt;)\s*</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[_$a-zA-Z][$\w]*</string>
							<key>name</key>
							<string>meta.function.anonymous.cfml meta.function.declaration.cfml entity.name.function.cfml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.function.anonymous.cfml meta.function.declaration.cfml meta.function.parameters.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-parameter</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.function.parameters.cfml punctuation.definition.parameters.end.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(\{|=&gt;))</string>
							<key>name</key>
							<string>meta.function.anonymous.cfml meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#tag-generic-attribute</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\s*\([^\(]*?\)\s*=&gt;)</string>
					<key>end</key>
					<string>(?=[);}\],\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\s*(=&gt;)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.function.anonymous.cfml meta.function.declaration.cfml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.arrow.cfml</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.body.cfml</string>
							<key>end</key>
							<string>(?=[);}\],\n])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.anonymous.cfml meta.function.declaration.cfml meta.function.parameters.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-parameter</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>arrow-function-declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\([^\(]*?\)\s*=&gt;\s*\{)</string>
					<key>end</key>
					<string>(=&gt;)\s*</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.arrow.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.declaration.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration-parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\([^\(]*?\)\s*=&gt;)</string>
					<key>end</key>
					<string>(?=[);}\],\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=\()</string>
							<key>end</key>
							<string>(?=(=&gt;))</string>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration-parameters</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(=&gt;)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>meta.function.declaration.cfml</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.function.arrow.cfml</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.body.cfml</string>
							<key>end</key>
							<string>(?=[);}\],\n])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>arrow-function-declaration-parameters</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.parameters.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-parameter</string>
				</dict>
			</array>
		</dict>
		<key>block-scope</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\})</string>
			<key>name</key>
			<string>meta.block.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#statements</string>
				</dict>
			</array>
		</dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#round-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#square-brackets</string>
				</dict>
			</array>
		</dict>
		<key>call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\b[_$a-zA-Z][$\w]*\s*\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#support-call</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>meta.function-call.cfml variable.function.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([_$a-zA-Z][$\w]*)\s*(?=\()</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-call-params</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[_$a-zA-Z][$\w]*\s*\.\s*[_$a-zA-Z][$\w]*\s*\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*\.)</string>
							<key>end</key>
							<string>\.</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.cfml</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-scopes</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>variable.other.object.cfml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\.</string>
							<key>name</key>
							<string>keyword.other.accessor.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#method-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[_$a-zA-Z][$\w.]*\s*::\s*[_$a-zA-Z][$\w]*\s*\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w.]*\s*::)</string>
							<key>end</key>
							<string>::</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.static.cfml</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w.]*</string>
									<key>name</key>
									<string>entity.name.class.cfml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#static-method-call</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>cfml-scopes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:super)\b</string>
					<key>name</key>
					<string>variable.language.super.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:this)\b</string>
					<key>name</key>
					<string>variable.language.this.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:thread)\b(?=[\[.])</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  \b(?i:(
  application|arguments|attributes|caller|cgi|client|cookie|flash|form|
  local|request|server|session|thistag|url|variables|self|static|argumentcollection
))\b</string>
					<key>name</key>
					<string>variable.language.scope.cfml</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(/\*\*)\s*$</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>^\s*\*?\s*((\@)\S*)\s</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.documentation.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.keyword.cfml</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>text.html</string>
							<key>end</key>
							<string>(\n|(?=\*/))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>^\s*(\*(?!/))?\s*(?=\w)</string>
							<key>contentName</key>
							<string>text.html</string>
							<key>end</key>
							<string>(\n|(?=\*/))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>//</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\n</string>
					<key>name</key>
					<string>comment.line.double-slash.cfml</string>
				</dict>
			</array>
		</dict>
		<key>component</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^(?=\s*(?:(abstract|final)\s+)?(component)\b)</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.class.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(?:(abstract|final)\s+)?(component)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.type.class.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\{)</string>
							<key>name</key>
							<string>meta.class.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#component-attributes</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>name</key>
							<string>meta.class.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^(?=\s*(interface)\b)</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.interface.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(interface)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.interface.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\{)</string>
							<key>name</key>
							<string>meta.interface.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#component-attributes</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>name</key>
							<string>meta.interface.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>component-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(extends)\s*(=)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((")([a-zA-Z0-9:.]+)?("))|((')([a-zA-Z0-9:.]+)?('))|([a-zA-Z0-9:.]+)|(?=[^a-zA-Z0-9:.])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml entity.other.inherited-class.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.class.inheritance.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-generic-attribute</string>
				</dict>
			</array>
		</dict>
		<key>conditional</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\bswitch\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.switch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.switch.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#round-brackets</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.block.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>:</string>
									<key>end</key>
									<string>(?=(\bcase\b|\bdefault\b|\}))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statements</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>\b(case|default)\b</string>
									<key>name</key>
									<string>keyword.control.switch.cfml</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bdo\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.group.cfml punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.do-while.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.end.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.block.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\bwhile\b</string>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.group.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.group.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bfor\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\(\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.for.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens-block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bwhile\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\(\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.while.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens-block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(else\s+if|if)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\(\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.conditional.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens-block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\belse\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.conditional.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\btry\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.trycatch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.try.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bfinally\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.trycatch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.finally.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-scope</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bcatch\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.trycatch.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?:(\})|(?=[^\(\{\}\s]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.catch.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens-block-scope</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnull\b</string>
					<key>name</key>
					<string>constant.language.null.cfml</string>
				</dict>
			</array>
		</dict>
		<key>constructor</key>
		<dict>
			<key>begin</key>
			<string>\b(new)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))|(?=[^_$\w.\(\)])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.parameters.method.cfml punctuation.definition.group.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.instance.constructor.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[_$a-zA-Z][$\w\.]*</string>
					<key>name</key>
					<string>entity.name.class.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.function-call.parameters.method.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.function-call.method.cfml</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\b([_$a-zA-Z][$\w]*)\s*(=)(?!=)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.method-parameter.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=[,\)])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expressions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constructor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#named-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anonymous-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#struct-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
			</array>
		</dict>
		<key>function-call-params</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.group.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.group.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.cfml meta.function-call.parameters.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.function-call.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([_$a-zA-Z][$\w]*)\s*(=)(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.function-parameter.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?=\s*\bfunction\b)</string>
			<key>end</key>
			<string>(?=\{)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(function)\b\s*</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>meta.function.declaration.cfml entity.name.function.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-declaration-parameters</string>
				</dict>
			</array>
		</dict>
		<key>function-declaration-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.function.declaration.cfml meta.function.parameters.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-parameter</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.parameters.cfml punctuation.definition.parameters.end.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(\{|;|=&gt;))</string>
					<key>name</key>
					<string>meta.function.declaration.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-parameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.function.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i:required)</string>
					<key>name</key>
					<string>keyword.other.required.argument.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:([_$a-zA-Z][$\w]*)\s+)?([_$a-zA-Z][$\w.]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*)</string>
							<key>end</key>
							<string>(?=[,)])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#tag-generic-attribute</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(=)\s*(?i:(\btrue\b)|(\bfalse\b)|(\bnull\b)|([_$a-zA-Z][$\w]*))?</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.language.boolean.true.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>constant.language.boolean.false.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.language.null.cfml</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>variable.other.readwrite.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=([_$a-zA-Z][$\w]*|[,)]))</string>
							<key>name</key>
							<string>meta.parameter.optional.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?=\s*([+\-*/&amp;%])\s*[_$a-zA-Z][$\w]*)</string>
									<key>end</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>variable.other.readwrite.cfml</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#operators</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>hash-delimiters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>##</string>
					<key>name</key>
					<string>constant.character.escape.hash.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.start</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.cfml.script</string>
					<key>end</key>
					<string>#</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.hash.cfml.end</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(throw|rethrow)\b(?!\()</string>
					<key>name</key>
					<string>keyword.control.trycatch.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(break|continue)\b</string>
					<key>name</key>
					<string>keyword.control.loop.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(abort)\b</string>
					<key>name</key>
					<string>keyword.control.flow.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)\b(return)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\bvar\b</string>
					<key>name</key>
					<string>storage.type.cfml</string>
				</dict>
			</array>
		</dict>
		<key>keywords-top-level</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\bimport\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\n|;)</string>
					<key>name</key>
					<string>meta.import.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[_$a-zA-Z][$\w]*</string>
							<key>name</key>
							<string>variable.other.readwrite.cfml</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\*</string>
							<key>name</key>
							<string>constant.other.cfml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keywords-top-level</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#component</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statements</string>
				</dict>
			</array>
		</dict>
		<key>method-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#support-method-call</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([_$a-zA-Z][$\w]*)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.method.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#method-call-params</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>method-call-params</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.group.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\))</string>
			<key>name</key>
			<string>meta.function-call.parameters.method.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.function-call.method.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([_$a-zA-Z][$\w]*)\s*(=)(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.method-parameter.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>named-function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(?:
  (?:
    (?i:\b(private|package|public|remote|static|final|abstract)\s+)?
    (?i:\b(private|package|public|remote|static|final|abstract)\s+)?
    (?i:\b
      (void)\s+
      |
      (any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid)\s+
      |
      ([A-Za-z0-9_\.$]+)\s+
      |
      ([A-Za-z0-9_\.$]+)(\[)(\])?\s+
    )?
  )
)
(?i:(function))
\s+
(?:
  (init)
  |
  ([_$a-zA-Z][$\w]*)
)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.cfml</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.constructor.cfml</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.void.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.primitive.cfml</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.cfml</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>storage.type.return-type.object.array.cfml</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>meta.brackets.cfml punctuation.definition.brackets.begin.cfml</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>meta.brackets.cfml punctuation.definition.brackets.end.cfml</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}|(?=;)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-declaration-parameters</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.function.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(([_$a-zA-Z][$\w]*)\s*(\.)\s*)+([_$a-zA-Z][$\w]*)\s*(=)\s*(\s*\bfunction\b|\s*\([^\(]*?\)\s*=&gt;\s*\{))</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.function.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*\.)</string>
							<key>end</key>
							<string>\.</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-scopes</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>support.class.cfml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*(=)\s*)</string>
							<key>end</key>
							<string>\s*(=)\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>meta.property.cfml entity.name.function.cfml</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(([_$a-zA-Z][$\w]*)\s*(\.)\s*)+([_$a-zA-Z][$\w]*)\s*(=)\s*\([^\(]*?\)\s*=&gt;)</string>
					<key>end</key>
					<string>(?=[);}\],\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*\.)</string>
							<key>end</key>
							<string>\.</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.accessor.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#cfml-scopes</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>support.class.cfml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*(=)\s*)</string>
							<key>end</key>
							<string>\s*(=)\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>meta.property.cfml entity.name.function.cfml</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*(\s*\bfunction\b|\s*\([^\(]*?\)\s*=&gt;\s*\{))</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.function.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*(=)\s*)</string>
							<key>end</key>
							<string>\s*(=)\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[A-Z][_$\dA-Z]*</string>
									<key>name</key>
									<string>variable.other.constant.cfml entity.name.function.cfml</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>variable.other.readwrite.cfml entity.name.function.cfml</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*\([^\(]*?\)\s*=&gt;)</string>
					<key>end</key>
					<string>(?=[);}\],\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=[_$a-zA-Z][$\w]*\s*(=)\s*)</string>
							<key>end</key>
							<string>\s*(=)\s*</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.cfml</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.function.declaration.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[A-Z][_$\dA-Z]*</string>
									<key>name</key>
									<string>variable.other.constant.cfml entity.name.function.cfml</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[_$a-zA-Z][$\w]*</string>
									<key>name</key>
									<string>variable.other.readwrite.cfml entity.name.function.cfml</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\s*\bfunction\b\s+[_$a-zA-Z][$\w]*)</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.block.begin.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\})</string>
							<key>name</key>
							<string>meta.function.body.cfml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statements</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#function-declaration</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>match</key>
			<string>(?xi)(?:\B[-+])?(?:\b0x[0-9a-f]*|(\B\.[0-9]+|\b[0-9]+(\.[0-9]*)?))</string>
			<key>name</key>
			<string>constant.numeric.cfml</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>!(?!=)</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:not)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--|\+\+</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnew\b</string>
					<key>name</key>
					<string>keyword.operator.new.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\bin\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&amp;&amp;|\|\|</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logical.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:(and|or|xor|eqv|imp))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.logical.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>=(?!=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?i:(greater|less|than|equal\s+to|does|contains|equal|eq|neq|lt|lte|le|gt|gte|ge|and|is))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.decision.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%=|&amp;=|\*=|\+=|-=|/=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.augmented.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&amp;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.concat.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;=|&gt;=|&lt;|&gt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.relational.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>==|!=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.comparison.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/|%|\*|\+|-</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.arithmetic.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\?|:(?!:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ternary.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\})|(?=[^\s\{])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>parens-block-scope</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-scope</string>
				</dict>
			</array>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\.</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))|(?=\n)|(\})|(;)|(?:([A-Z][_$\dA-Z]*)|([_$a-zA-Z][$\w]*))(?=\n|[^$\w])(?!(\s*\(|\s*=\s*(function\b|\([^\(]*?\)\s*=&gt;)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.statement.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.property.constant.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.property.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*(function\b|\([^\(]*?\)\s*=&gt;\s*\{))</string>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.block.begin.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\})</string>
									<key>name</key>
									<string>meta.function.body.cfml</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statements</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>meta.function.declaration.cfml</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.property.cfml entity.name.function.cfml</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.cfml</string>
										</dict>
									</dict>
									<key>match</key>
									<string>([_$a-zA-Z][$\w]*)\s*(=)\s*</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#function-declaration</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*\([^\(]*?\)\s*=&gt;)</string>
							<key>end</key>
							<string>(?=[);}\],\n])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>meta.function.declaration.cfml</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.property.cfml entity.name.function.cfml</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.cfml</string>
										</dict>
									</dict>
									<key>match</key>
									<string>([_$a-zA-Z][$\w]*)\s*(=)\s*</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#method-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>::</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.static.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))|(?=\n)|(\})|(;)|(?:([A-Z][_$\dA-Z]*)|([_$a-zA-Z][$\w]*))(?=\n|[^$\w])(?!(\s*\(|\s*=\s*(function\b|\([^\(]*?\)\s*=&gt;)))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.statement.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.property.constant.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.property.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*(function\b|\([^\(]*?\)\s*=&gt;\s*\{))</string>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.block.begin.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\})</string>
									<key>name</key>
									<string>meta.function.body.cfml</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statements</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>meta.function.declaration.cfml</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.property.cfml entity.name.function.cfml</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.cfml</string>
										</dict>
									</dict>
									<key>match</key>
									<string>([_$a-zA-Z][$\w]*)\s*(=)\s*</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#function-declaration</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=([_$a-zA-Z][$\w]*)\s*(=)\s*\([^\(]*?\)\s*=&gt;)</string>
							<key>end</key>
							<string>(?=[);}\],\n])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>meta.function.declaration.cfml</string>
										</dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>meta.property.cfml entity.name.function.cfml</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.operator.assignment.cfml</string>
										</dict>
									</dict>
									<key>match</key>
									<string>([_$a-zA-Z][$\w]*)\s*(=)\s*</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#static-method-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>meta.delimiter.comma.cfml</string>
				</dict>
			</array>
		</dict>
		<key>queryexecute-parameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(sql)\s*(=)(?!=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.function-parameter.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#sql-string</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>round-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\)</string>
					<key>name</key>
					<string>invalid.illegal.stray.brace.round.cfml</string>
				</dict>
			</array>
		</dict>
		<key>sql-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cfml punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.sql</string>
					<key>end</key>
					<string>(")(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.double.cfml punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.queryexecute.sql.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.cfml punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.sql</string>
					<key>end</key>
					<string>(')(?!')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.cfml punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.queryexecute.sql.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>square-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[$\w\)\]])\s*(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.brackets.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.brackets.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.brackets.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.brackets.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.brackets.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array-literal.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.array-literal.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statements</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#static</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.begin.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statements</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-in-script</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-in-script-cf</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>static</key>
		<dict>
			<key>begin</key>
			<string>\bstatic\b(?=\s*[\n\{])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.static.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?:(\})|(?=[^\{\}\s]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.block.static.cfml punctuation.definition.block.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.block.static.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-scope</string>
				</dict>
			</array>
		</dict>
		<key>static-method-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([_$a-zA-Z][$\w]*)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.function.static.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.method.static.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#method-call-params</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.cfml punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(")(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.cfml punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>string.quoted.double.cfml constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\s*(?:SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER|WITH|DECLARE|FROM|WHERE|AND|ORDER BY|GROUP BY|INNER JOIN|OUTER JOIN|LEFT JOIN)\b)</string>
					<key>end</key>
					<string>(?="[^"])</string>
					<key>name</key>
					<string>meta.string.quoted.double.cfml source.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\S)</string>
					<key>end</key>
					<string>(?="[^"])</string>
					<key>name</key>
					<string>string.quoted.double.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[\s\n]</string>
					<key>name</key>
					<string>string.quoted.double.cfml</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.cfml punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(')(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.single.cfml punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>string.quoted.single.cfml constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\s*(?:SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER|WITH|DECLARE|FROM|WHERE|AND|ORDER BY|GROUP BY|INNER JOIN|OUTER JOIN|LEFT JOIN)\b)</string>
					<key>end</key>
					<string>(?='[^'])</string>
					<key>name</key>
					<string>meta.string.quoted.single.cfml source.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\S)</string>
					<key>end</key>
					<string>(?='[^'])</string>
					<key>name</key>
					<string>string.quoted.single.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[\s\n]</string>
					<key>name</key>
					<string>string.quoted.single.cfml</string>
				</dict>
			</array>
		</dict>
		<key>struct-literal</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.struct-literal.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(\'[^']*\'|\"[^"]*\"|[_$a-zA-Z][$\w]*)\s*(:|=)\s*(\bfunction\b|\([^\(]*?\)\s*=&gt;\s*\{))</string>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function.body.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal-function-keys</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=\s*\bfunction\b)</string>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-declaration</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.block.begin.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\})</string>
									<key>name</key>
									<string>meta.function.body.cfml</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statements</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?=\s*\([^\(]*?\)\s*=&gt;\s*\{)</string>
							<key>end</key>
							<string>(?=\})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#arrow-function-declaration</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\{</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.block.begin.cfml</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=\})</string>
									<key>name</key>
									<string>meta.function.body.cfml</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statements</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(\'[^']*\'|\"[^"]*\"|[_$a-zA-Z][$\w]*)\s*(:|=)\s*\([^\(]*?\)\s*=&gt;)</string>
					<key>end</key>
					<string>(?=[);}\],\n])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-literal-function-keys</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#arrow-function-declaration</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?="|')</string>
					<key>end</key>
					<string>(?&lt;="|')</string>
					<key>name</key>
					<string>meta.struct-literal.key.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>meta.struct-literal.key.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(:|=)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(,)|(?=\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.struct-literal.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.struct-literal.cfml</string>
				</dict>
			</array>
		</dict>
		<key>struct-literal-function-keys</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.cfml</string>
					<key>end</key>
					<string>(')(?!')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.declaration.cfml meta.struct-literal.key.cfml string.quoted.single.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>''</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.cfml</string>
					<key>end</key>
					<string>(")(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.declaration.cfml meta.struct-literal.key.cfml string.quoted.double.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hash-delimiters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>meta.function.declaration.cfml meta.struct-literal.key.cfml entity.name.function.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(:|=)</string>
					<key>name</key>
					<string>meta.function.declaration.cfml punctuation.separator.key-value.cfml</string>
				</dict>
			</array>
		</dict>
		<key>support-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']component["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.parameters.support.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.support.cfml meta.function-call.support.createcomponent.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.function-call.support.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support-call-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(createobject)(\()(?=(?:\s*type\s*=)?\s*["']java["']\s*,)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.parameters.support.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.support.cfml meta.function-call.support.createjavaobject.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.function-call.support.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support-call-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(queryexecute)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.parameters.support.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.support.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(?&lt;=queryexecute\()</string>
							<key>end</key>
							<string>(?=[,)])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#sql-string</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#queryexecute-parameter</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#support-call-parameter</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.function-call.support.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#queryexecute-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support-call-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\b
(?i:
    (array(?:append|avg|clear|contains|containsnocase|delete|deleteat|deletenocase|each
    |every|filter|find|findall|findallnocase|findnocase|first|indexexists|insertat|isdefined
    |isempty|last|len|map|max|median|merge|mid|min|new|prepend|reduce|resize|reverse
    |set|slice|some|sort|sum|swap|tolist|tostruct)|cache(?:clear|count|delete|get|getall
    |getallids|getdefaultcachename|getmetadata|getproperties|getsession|idexists|keyexists
    |put|regionexists|regionnew|regionremove|remove|removeall|setproperties)|component(?:cacheclear
    |cachelist|info)|create(?:date|datetime|dynamicproxy|guid|object|odbcdate|odbcdatetime
    |odbctime|time|timespan|uniqueid|uuid)|date(?:add|compare|convert|diff|format|part
    |timeformat)|entity(?:delete|load|loadbyexample|loadbypk|merge|namearray|namelist
    |new|reload|save|toquery)|get(?:applicationmetadata|applicationsettings|authuser
    |basetagdata|basetaglist|basetemplatepath|builtinfunction|canonicalpath|classpath
    |clientvariableslist|componentmetadata|contextroot|cpuusage|currentcontext|currenttemplatepath
    |directoryfrompath|encoding|exception|filefrompath|fileinfo|freespace|functioncalledname
    |functiondata|functionkeywords|functionlist|gatewayhelper|httprequestdata|httptimestring
    |k2serverdoccount|k2serverdoccountlimit|locale|localedisplayname|localhostip|luceeid
    |memoryusage|metadata|metricdata|numericdate|pagecontext|printerinfo|printerlist
    |profilesections|profilestring|readableimageformats|safehtml|soaprequest|soaprequestheader
    |soapresponse|soapresponseheader|systemfreememory|systemtotalmemory|tagdata|taglist
    |tempdirectory|tempfile|templatepath|tickcount|timezone|timezoneinfo|token|totalspace
    |userroles|variable|vfsmetadata|writeableimageformats)|image(?:addborder|blur|clearrect
    |copy|createcaptcha|crop|drawarc|drawbeveledrect|drawcubiccurve|drawimage|drawline
    |drawlines|drawoval|drawpoint|drawquadraticcurve|drawrect|drawroundrect|drawtext
    |filter|filtercolormap|filtercurves|filterkernel|filterwarpgrid|flip|fonts|formats
    |getblob|getbufferedimage|getexifmetadata|getexiftag|getheight|getiptcmetadata|getiptctag
    |getmetadata|getwidth|grayscale|info|makecolortransparent|maketranslucent|negative
    |new|overlay|paste|read|readbase64|resize|rotate|rotatedrawingaxis|scaletofit|setantialiasing
    |setbackgroundcolor|setdrawingalpha|setdrawingcolor|setdrawingstroke|setdrawingtransparency
    |sharpen|shear|sheardrawingaxis|translate|translatedrawingaxis|write|writebase64
    |xordrawingmode)|is(?:array|binary|boolean|closure|customfunction|date|ddx|debugmode
    |defined|empty|fileobject|image|imagefile|instanceof|ipinrange|ipv6|json|leapyear
    |localhost|notmap|null|numeric|numericdate|object|pdffile|pdfobject|query|safehtml
    |simplevalue|soaprequest|spreadsheetfile|spreadsheetobject|struct|userinanyrole|userinrole
    |userloggedin|valid|validoauthaccesstoken|videofile|wddx|xml|xmlattribute|xmldoc
    |xmlelem|xmlnode|xmlroot|zipfile)|list(?:append|avg|changedelims|compact|contains
    |containsnocase|deleteat|each|every|filter|find|findnocase|first|getat|indexexists
    |insertat|itemtrim|last|len|map|prepend|qualify|reduce|removeduplicates|rest|setat
    |some|sort|toarray|trim|valuecount|valuecountnocase)|object(?:equals|load|save)|orm(?:clearsession
    |closeallsessions|closesession|evictcollection|evictentity|evictqueries|executequery
    |flush|flushall|getsession|getsessionfactory|index|indexpurge|reload|search|searchoffline)
    |query(?:addcolumn|addrow|columnarray|columncount|columndata|columnexists|columnlist
    |convertforgrid|currentrow|deletecolumn|deleterow|each|every|execute|filter|getcell
    |getrow|map|new|recordcount|reduce|rowdata|setcell|slice|some|sort)|replace(?:list
    |nocase)|spreadsheet(?:addautofilter|addcolumn|addfreezepane|addimage|addinfo|addpagebreaks
    |addrow|addrows|addsplitpane|createsheet|deletecolumn|deletecolumns|deleterow|deleterows
    |formatcell|formatcellrange|formatcolumn|formatcolumns|formatrow|formatrows|getcellcomment
    |getcellformula|getcellvalue|info|mergecells|new|read|readbinary|removesheet|setactivesheet
    |setactivesheetnumber|setcellcomment|setcellformula|setcellvalue|setcolumnwidth|setfooter
    |setheader|setrowheight|shiftcolumns|shiftrows|write)|store(?:addacl|getacl|getmetadata
    |setacl|setmetadata)|struct(?:append|clear|copy|count|delete|each|every|filter|find
    |findkey|findvalue|get|insert|isempty|keyarray|keyexists|keylist|keytranslate|map
    |new|reduce|some|sort|update)|to(?:base64|binary|numeric|script|string)|transaction(?:commit
    |rollback|setsavepoint)|url(?:decode|encode|encodedformat|sessionformat)|xml(?:childpos
    |elemnew|format|getnodetype|new|parse|search|transform|validate)|abs|acos|addsoaprequestheader
    |addsoapresponseheader|ajaxlink|ajaxonload|applicationstarttime|applicationstop|array
    |asc|asin|atn|beat|binarydecode|binaryencode|bitand|bitmaskclear|bitmaskread|bitmaskset
    |bitnot|bitor|bitshln|bitshrn|bitxor|booleanformat|callstackdump|callstackget|canonicalize
    |ceiling|cfusion_decrypt|cfusion_encrypt|charsetdecode|charsetencode|chr|cjustify
    |collectioneach|collectionevery|collectionfilter|collectionmap|collectionreduce|collectionsome
    |compare|comparenocase|compress|contractpath|cos|csrfgeneratetoken|csrfverifytoken
    |ctcacheclear|ctcachelist|datasourceflushmetacache|day|dayofweek|dayofweekasstring
    |dayofweekshortasstring|dayofyear|daysinmonth|daysinyear|de|decimalformat|decodeforhtml
    |decodefromurl|decrementvalue|decrypt|decryptbinary|deleteclientvariable|deserialize
    |deserializejson|deserializexml|directorycopy|directorycreate|directorydelete|directoryexists
    |directorylist|directoryrename|directorysize|dollarformat|dotnettocftype|duplicate
    |each|echo|empty|encodeforcss|encodefordn|encodeforhtml|encodeforhtmlattribute|encodeforjavascript
    |encodeforldap|encodeforurl|encodeforxml|encodeforxmlattribute|encodeforxpath|encrypt
    |encryptbinary|esapidecode|esapiencode|evaluate|exp|expandpath|extract|fileappend
    |fileclose|filecopy|filedelete|fileexists|filegetmimetype|fileiseof|filemove|fileopen
    |fileread|filereadbinary|filereadline|fileseek|filesetaccessmode|filesetattribute
    |filesetlastmodified|fileskipbytes|fileupload|fileuploadall|filewrite|filewriteline
    |find|findnocase|findoneof|firstdayofmonth|fix|floor|formatbasen|generatepbkdfkey
    |generatesecretkey|hash|hash40|hmac|hour|htmlcodeformat|htmleditformat|htmlparse
    |iif|incrementvalue|inputbasen|insert|int|invalidateoauthaccesstoken|invoke|javacast
    |jsstringformat|lcase|left|len|ljustify|location|log|log10|lscurrencyformat|lsdateformat
    |lsdatetimeformat|lsdayofweek|lseurocurrencyformat|lsiscurrency|lsisdate|lsisnumeric
    |lsnumberformat|lsparsecurrency|lsparsedatetime|lsparseeurocurrency|lsparsenumber
    |lstimeformat|lsweek|ltrim|max|metaphone|mid|millisecond|min|minute|month|monthasstring
    |monthshortasstring|newline|now|nowserver|nullvalue|numberformat|onapplicationend
    |onapplicationstart|onerror|onmissingmethod|onmissingtemplate|onrequest|onrequestend
    |onrequeststart|onsessionend|onsessionstart|pagepoolclear|pagepoollist|paragraphformat
    |parameterexists|parsedatetime|parsenumber|pi|precisionevaluate|preservesinglequotes
    |quarter|query|quotedvaluelist|rand|randomize|randrange|reescape|refind|refindnocase
    |releasecomobject|rematch|rematchnocase|removecachedquery|removechars|repeatstring
    |replace|rereplace|rereplacenocase|restdeleteapplication|restinitapplication|restsetresponse
    |reverse|right|rjustify|round|rtrim|second|sendgatewaymessage|serialize|serializejson
    |serializexml|sessiongetmetadata|sessioninvalidate|sessionrotate|sessionstarttime
    |setencoding|setlocale|setprofilestring|settimezone|setvariable|sgn|sin|sizeof|sleep
    |soundex|spanexcluding|spanincluding|sqr|sslcertificateinstall|sslcertificatelist
    |stringlen|stripcr|systemcacheclear|systemoutput|tan|threadjoin|threadterminate|throw
    |timeformat|trace|trim|truefalseformat|ucase|ucfirst|unserializejava|val|valuearray
    |valuelist|verifyclient|week|wrap|writebody|writedump|writelog|writeoutput|wsgetallchannels
    |wsgetsubscribers|wspublish|wssendmessage|year|yesnoformat)
  )(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.begin.cfml</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.parameters.support.cfml</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.parameters.support.cfml punctuation.definition.group.end.cfml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.support.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.separator.function-call.support.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support-call-parameter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support-call-parameter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b([_$a-zA-Z][$\w\.]*)\s*(=)(?!=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.function-parameter.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support-method-call</key>
		<dict>
			<key>begin</key>
			<string>(?x)
(?i:
  (add|addcolumn|addrow|append|avg|blur|cjustify|clear|clearrect|columnarray|columncount|columndata|columnexists
  |columnlist|compare|comparenocase|contains|containsnocase|copy|count|crop|currentrow|dateformat|day|dayofweek
  |dayofyear|daysinmonth|daysinyear|delete|deleteat|deletecolumn|deleterow|diff|drawarc|drawcubiccurve|drawline
  |drawlines|drawoval|drawpoint|drawquadraticcurve|drawrect|drawroundrect|each|every|filter|find|findall
  |findallnocase|findkey|findnocase|findoneof|findvalue|first|firstdayofmonth|flip|get|getbufferedimage|getcell
  |getheight|getrow|gettoken|getwidth|grayscale|hour|indexexists|info|insert|insertat|isdefined|isempty|keyarray
  |keyexists|keylist|keytranslate|last|lcase|left|len|listappend|listavg|listchangedelims|listcompact|listcontains
  |listcontainsnocase|listdeleteat|listeach|listevery|listfilter|listfind|listfindnocase|listfirst|listgetat
  |listindexexists|listinsertat|listitemtrim|listlast|listlen|listmap|listprepend|listqualify|listreduce
  |listremoveduplicates|listrest|listsetat|listsome|listsort|listtoarray|listvaluecount|listvaluecountnocase
  |ljustify|lsdateformat|lsdayofweek|ltrim|map|max|median|merge|mid|min|minute|month|overlay|part|paste|prepend
  |quarter|recordcount|reduce|refind|refindnocase|rematch|rematchnocase|removechars|repeatstring|replace|replacenocase
  |rereplace|rereplacenocase|resize|reverse|right|rowdata|rtrim|scaletofit|second|set|setantialiasing|setcell
  |setdrawingstroke|sharpen|slice|some|sort|spanexcluding|spanincluding|stripcr|sum|swap|tolist|tostruct|translate
  |trim|ucase|update|week|wrap|writebase64|year)
)(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.member.cfml</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.parameters.method.support.cfml punctuation.definition.group.begin.cfml</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.parameters.method.support.cfml</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.parameters.method.support.cfml punctuation.definition.group.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.method.support.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.function-call.method.support.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([_$a-zA-Z][$\w\.]*)\s*(=)(?!=)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.method-parameter.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[,\)])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expressions</string>
				</dict>
			</array>
		</dict>
		<key>tag-generic-attribute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z0-9:-]+)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(=)\s*((?:[^\s&lt;&gt;/'"{;]|/(?!/&gt;))+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>punctuation.separator.key-value.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-string</string>
				</dict>
			</array>
		</dict>
		<key>tag-generic-attribute-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z0-9:-]+\b</string>
					<key>name</key>
					<string>meta.tag.script.cfml entity.other.attribute-name.cfml</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>=</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s*\b([a-zA-Z0-9:-]+)\s*=)|(?=[;\{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expressions</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-in-script</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(property)(?!\s+in\b)(\s+(any|array|binary|boolean|component|date|guid|numeric|query|string|struct|xml|uuid|[_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w]*\b)(?!\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml meta.tag.property.name.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(property)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*$|\s*[{;]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(;|{))</string>
					<key>name</key>
					<string>meta.tag.script.cfml meta.tag.property.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
								<key>10</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
								<key>11</key>
								<dict>
									<key>name</key>
									<string>string.unquoted.cfml meta.tag.property.name.cfml</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>string.quoted.double.cfml</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>meta.tag.property.name.cfml</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.end.cfml</string>
								</dict>
								<key>7</key>
								<dict>
									<key>name</key>
									<string>string.quoted.single.cfml</string>
								</dict>
								<key>8</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.begin.cfml</string>
								</dict>
								<key>9</key>
								<dict>
									<key>name</key>
									<string>meta.tag.property.name.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(name)\s*(=)\s*(?:((")([^&lt;&gt;"']*)("))|((')([^&lt;&gt;"']*)('))|([^&lt;&gt;"'\s]*))</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(param)(?!\s+in\b)(?=\s+(name|default|max|maxLength|min|pattern|type)\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(param)(?!\s+in\b)\s+([_$a-zA-Z][$\w\.]*)(?=\s+(name|default|max|maxLength|min|pattern|type))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(param)(?!\s+in\b)(\s+([_$a-zA-Z][$\w]*))?\s+([_$a-zA-Z][$\w\.]*\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.cfml</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(param)(?!\s+in\b)(?=(\s+[a-zA-Z]|\s*[{;]|\s*$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.tag.script.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)(\b)
(?i:
  (ajaximport|ajaxproxy|applet|application|argument|associate|break|cache|calendar
  |chart|chartdata|chartseries|client|clientsettings|col|collection|content|cookie|dbinfo
  |directory|div|document|documentitem|documentsection|dump|error|exchangecalendar
  |exchangeconnection|exchangecontact|exchangefilter|exchangemail|exchangetask
  |execute|feed|file|fileupload|flush|form|formgroup|formitem|ftp|grid|gridcolumn
  |gridrow|gridupdate|header|htmlhead|htmltopdf|htmltopdfitem|http|httpparam|image
  |imap|imapfilter|import|include|index|input|insert|invoke|invokeargument|layout
  |layoutarea|ldap|location|lock|log|login|loginuser|logout|loop|mail|mailparam|mailpart
  |map|mapitem|mediaplayer|menu|menuitem|messagebox|module|ntauthenticate|oauth|object
  |objectcache|output|param|pdf|pdfform|pdfformparam|pdfparam|pdfsubform|pod|pop
  |presentation|presentationslide|presenter|print|processingdirective|procparam|procresult
  |progressbar|property|query|queryparam|registry|report|reportparam|savecontent|schedule
  |search|select|setting|sharepoint|silent|slider|spreadsheet|sprydataset|storedproc
  |table|textarea|textinput|thread|throw|timer|tooltip|trace|transaction|tree|treeitem|try
  |update|video|videoplayer|videoplayerparam|wddx|websocket|window|xml|zip|zipparam)
)(?=\s+[a-zA-Z0-9:-]+\s*([=;{]|$)|\s*({|$))</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.tag.script.cfml entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})|(?=;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.block.cfml punctuation.definition.block.end.cfml</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\s+</string>
							<key>name</key>
							<string>meta.tag.script.cfml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tag-generic-attribute-script</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block-scope</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-in-script-cf</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)(?i)
  (cf
  (?:ajaximport|ajaxproxy|applet|application|argument|associate|break|cache|calendar
  |chart|chartdata|chartseries|client|clientsettings|col|collection|content|cookie|dbinfo
  |directory|div|document|documentitem|documentsection|dump|error|exchangecalendar
  |exchangeconnection|exchangecontact|exchangefilter|exchangemail|exchangetask
  |execute|feed|file|fileupload|flush|form|formgroup|formitem|ftp|grid|gridcolumn
  |gridrow|gridupdate|header|htmlhead|htmltopdf|htmltopdfitem|http|httpparam|image
  |imap|imapfilter|import|include|index|input|insert|invoke|invokeargument|layout
  |layoutarea|ldap|location|lock|log|login|loginuser|logout|loop|mail|mailparam|mailpart
  |map|mapitem|mediaplayer|menu|menuitem|messagebox|module|ntauthenticate|oauth|object
  |objectcache|output|param|pdf|pdfform|pdfformparam|pdfparam|pdfsubform|pod|pop
  |presentation|presentationslide|presenter|print|processingdirective|procparam|procresult
  |progressbar|property|query|queryparam|registry|report|reportparam|savecontent|schedule
  |search|select|setting|sharepoint|silent|slider|spreadsheet|sprydataset|storedproc
  |table|textarea|textinput|thread|throw|timer|tooltip|trace|transaction|tree|treeitem|try
  |update|video|videoplayer|videoplayerparam|wddx|websocket|window|xml|zip|zipparam)
)\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.script.cfml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.tag.script.cf.cfml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.other.attribute-name.cfml</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z0-9:-]+)\b</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>=</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.key-value.cfml</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\s*\b([a-zA-Z0-9:-]+)\s*=)|(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expressions</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-string-quoted-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-quoted-double</string>
				</dict>
			</array>
		</dict>
		<key>tag-string-quoted-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>tag-string-quoted-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.cfml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?!')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.cfml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.cfml</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.quote.cfml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-delimiters</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfml-scopes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w.]*(?=\s*::)</string>
					<key>name</key>
					<string>entity.name.class.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*(?=\s*[\[\.])</string>
					<key>name</key>
					<string>variable.other.struct.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[A-Z][_$\dA-Z]*\b</string>
					<key>name</key>
					<string>variable.other.constant.cfml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[_$a-zA-Z][$\w]*</string>
					<key>name</key>
					<string>variable.other.readwrite.cfml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.cfml.script</string>
</dict>
</plist>
